apiVersion: v1
kind: Service
metadata:
  name: pservice 
  labels:
    app: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - port: 5432 
  clusterIP: None
  # type: LoadBalancer

# LoadBalancer service for external access
# apiVersion: v1
# kind: Service
# metadata:
#   name: postgres-external
# spec:
#   selector:
#     app: postgres
#   ports:
#     - port: 5432
#   type: LoadBalancer

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-db
spec:sta
  # serviceName: postgres-service
  serviceName: pservice
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          env:
            # - name: POSTGRES_DB: ps_db
            - name: POSTGRES_USER 
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: postgres-pv-claim
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
            #   memory: "1Gi"
            #   cpu: "250m"
              memory: "100Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
              - /usr/bin/pg_isready
              - -h
              - localhost
              - -U
              - postgres
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
              - /usr/bin/pg_isready
              # - pg_isready
              - -h
              - localhost
              - -U
              - postgres
            initialDelaySeconds: 30
        #     periodSeconds: 2
        # - name: cloud-sql-proxy
        #   image: gcr.io/cloudsql-docker/gce-proxy:1.16
        #   command: ["/cloud_sql_proxy",
        #             "-instances=<YOUR_PROJECT_ID>:<YOUR_REGION>:<YOUR_INSTANCE_ID>=tcp:5432",
        #             "-credential_file=/secrets/cloudsql/credentials.json"]
        #   volumeMounts:
        #     - name: cloudsql-instance-credentials
        #       mountPath: /secrets/cloudsql
        #       readOnly: true
  volumeClaimTemplates:
    - metadata:
        name: postgres-pv-claim
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            # storage: 1Gi
            storage: 250Mi

    # volumes:
    #   - name: cloudsql-instance-credentials
    #     secret:
    #       secretName: cloudsql-instance-credentials
